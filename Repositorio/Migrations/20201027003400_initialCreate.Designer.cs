// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

namespace Repositorio.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201027003400_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repositorio.Models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuncianteId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliaçãoId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataBloqueio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdComprador")
                        .HasColumnType("int");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncianteId");

                    b.HasIndex("AvaliaçãoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Repositorio.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvaliadorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliadorId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("Repositorio.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Repositorio.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RespostaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("RespostaId");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("Repositorio.Models.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAnuncio")
                        .HasColumnType("int");

                    b.Property<int>("IdInteressado")
                        .HasColumnType("int");

                    b.Property<int?>("RespostaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("RespostaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("Repositorio.Models.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPergunta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("Repositorio.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Repositorio.Models.Anuncio", b =>
                {
                    b.HasOne("Repositorio.Models.Usuario", "Anunciante")
                        .WithMany("Anuncios")
                        .HasForeignKey("AnuncianteId");

                    b.HasOne("Repositorio.Models.Avaliacao", "Avaliação")
                        .WithMany()
                        .HasForeignKey("AvaliaçãoId");

                    b.HasOne("Repositorio.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("Repositorio.Models.Avaliacao", b =>
                {
                    b.HasOne("Repositorio.Models.Usuario", "Avaliador")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AvaliadorId");
                });

            modelBuilder.Entity("Repositorio.Models.Imagem", b =>
                {
                    b.HasOne("Repositorio.Models.Anuncio", null)
                        .WithMany("Imagens")
                        .HasForeignKey("AnuncioId");

                    b.HasOne("Repositorio.Models.Resposta", null)
                        .WithMany("Imagens")
                        .HasForeignKey("RespostaId");
                });

            modelBuilder.Entity("Repositorio.Models.Pergunta", b =>
                {
                    b.HasOne("Repositorio.Models.Anuncio", null)
                        .WithMany("Perguntas")
                        .HasForeignKey("AnuncioId");

                    b.HasOne("Repositorio.Models.Resposta", "Resposta")
                        .WithMany()
                        .HasForeignKey("RespostaId");

                    b.HasOne("Repositorio.Models.Usuario", null)
                        .WithMany("Perguntas")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
